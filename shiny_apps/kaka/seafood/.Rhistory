read.csv('http://10.1.4.56:8080/api/seafood/lengthfrequencyob/?fmt=csv/', header=TRUE)
read.csv('http://10.1.4.56:8080/api/seafood/lengthfrequencyob/?fmt=csv/', header=TRUE)
tt <- read.csv('http://10.1.4.56:8080/api/seafood/lengthfrequencyob/?fmt=csv/', header=TRUE)
names(tt)
tt$length..mm.
quit()
head(tt)
names(tt$length..mm.))
names(tt$length..mm.)
head(tt$length..mm.)
head(tt[,'length..mm.')
head(tt[,'length..mm.'])
quit()
head(tt[,'length..mm.'])
 ddply
library(plyer)
library(dplyer)
install.packages('dplyer')
install.packages('plyer')
install.packages('dplyr')
library(dplyer)
library(dplyr)
 ddply
 dply
install.packages('plyr')
library(plyr)
 ddply
tt.new(tt)
tt.new <- ddply(tt)
tt.new <- ddply(tt, prop=prop.table(table(tt)), tt=names(table(tt)))
tt.new <- ddply(tt, .(Area), prop=prop.table(table(tt)), tt=names(table(tt)))
head(tt.new)
library(ggplot)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggplot
ggplot(tt.new, aes(tt,prop,fill=Area))
df <- data.frame(ID = 1:60, 
        LetterGrade = sample(c("A", "B", "C", "D", "E", "F"), 60, replace = T),
        ExperimentCohort = sample(c("One", "Two", "Three"), 60, replace = T))
df.new<-ddply(df,.(ExperimentCohort),summarise,
              prop=prop.table(table(LetterGrade)),
              LetterGrade=names(table(LetterGrade)))
ggplot(df.new,aes(LetterGrade,prop,fill=ExperimentCohort))+
  geom_bar(stat="identity",position='dodge')
ggplot(df.new,aes(LetterGrade,prop,fill=ExperimentCohort))
ggplot(df.new,aes(LetterGrade,prop,fill=ExperimentCohort))+
  geom_bar(stat="identity",position='dodge')
set.seed(1234)
dat <- data.frame(cond = factor(rep(c("A","B"), each=200)), 
                   rating = c(rnorm(200),rnorm(200, mean=.8)))
## Basic histogram from the vector "rating". Each bin is .5 wide.
## These both result in the same output:
ggplot(dat, aes(x=rating)) + geom_histogram(binwidth=.5)
# qplot(dat$rating, binwidth=.5)
# Draw with black outline, white fill
ggplot(dat, aes(x=rating)) +
    geom_histogram(binwidth=.5, colour="black", fill="white")
# Density curve
ggplot(dat, aes(x=rating)) + geom_density()
# Histogram overlaid with kernel density curve
ggplot(dat, aes(x=rating)) + 
    geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
                   binwidth=.5,
                   colour="black", fill="white") +
    geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
dat
head(dat)
head(tt)
head(dat)
tt.ana <- tt$Area
tt.ana
head(tt.ana)
tt.ana <- tt[c("Area","")]
head(tt)
tt.ana <- tt[c("Area","length..mm.")]
head(tt.ana)
ggplot(tt.ana, aes(x=length..mm.))
ggplot(tt.ana, aes(x=length..mm.)) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(tt.ana, aes(x=length..mm., fill=Area)) + geom_histogram(binwidth=.5, colour="black", fill="white")
unique(tt.ana$Area)
factor(unique(tt.ana$Area))
tt.ana <- data.frame(tt[c("Area","length..mm.")])
head(tt.ana)
tt.ana <- data.frame(tt[c("Area","length..mm.")], cond=factor(unique(tt.ana$Area)))
tt.ana <- data.frame(rep(tt[c("Area","length..mm.")]))
tt.ana <- data.frame(tt[c("Area","length..mm.")], cond=factor(unique(tt.ana$Area)))
factor(rep(unique(tt.ana$Area)))
factor(rep(unique(tt.ana$Area, each=200)))
ggplot(tt.ana, aes(x=length..mm., fill=cond)) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(tt.ana, aes(length..mm., fill=Area)) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(tt.ana, aes(length..mm., fill=Area)) 
ggplot(tt.ana, aes(length..mm., fill=Area)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Area)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Gear)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Tow)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Treatment)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Species)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Vessel)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=V)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Vessel)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Vessel)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Species)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Species, binwidth=x)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Species, binwidth=length..mm.)) + geom_histogram()
ggplot(tt, aes(length..mm., fill=Species), binwidth=length..mm.) + geom_histogram()
quiut()
quit()
ggplot
library(ggplot2)
quit()
ggplot(dat, aes(length, fill=cond))
library(ggplot2)
ggplot(dat, aes(length, fill=cond))
head(dat)
help(ggplot)
help(geom_histogram)
help(stat_bin)
help(stat_bin)
tt <- ggplot(dat, aes(length, fill=cond))
tt
help(stat_bin)
hist
hist(dat)
hist(dat$rating)
ls()
head(tt.new)
head(tt)
ls()
head(tt.ana)
hist(tt.ana$length..mm.)
summary(tt.ana$length..mm.)
summary(tt.ana$length..mm., group=tt.ana$Area)
ggplot(dat, aes(length, fill=cond)) + geom_text()
tt.ana
tt.ana
head(tt.ana)
ggplot(tt, aes(length..mm., fill=Species), binwidth=length..mm.) + geom_histogram()
ggplot(tt.ana, aes(length..mm., fill=Species), binwidth=length..mm.) + geom_histogram()
ls()
head(tt.new)
ggplot(tt.new, aes(length..mm., fill=Species), binwidth=length..mm.) + geom_histogram()
quit()
library(shiny)
library(shinyTree)
texasCi <- readRDS("texasCities.Rds")
texasCi
head(texasCi)
texasCi$Northwest Corner
texasCi$`Northwest Corner`
help(list)
quit()
library(shinyTree)
library(shiny)
ll <- list()
ll
ll$k1 <- "v1"
ll
ll$k2 <- list(k2="v1")
ll
ll$k2
ll["k2"]
ll["k3"] <- list(k5="v3")
ll
ll["k3"] <- list("k5="v3")
ll["k3"] <- list("k5"="v3")
ll
ll["k3"]["k5"] <- "v3"
ll["k3"] <- "v3"
ll
lappend <- function (lst, ...){
  lst <- c(lst, list(...))
  return(lst)
}
ll
lappend(ll, list("k9"="iug"))
ll
quit()
tree <- read.csv(paste('http://10.1.4.56:8080/api/seafood/tree/?fmt=csv/', sep=''), header=TRUE)
for(t in tree){
print(t)
}
for(t in head(tree)){
print(t)
}
for(t in head(tree)){
print(t$Level.1)
}
names(tree)
for(t in head(tree)){
print(t[1])
}
names(tree)
for(i in seq(nrow(tree))){
print(i)
}
names(tree)
tt <- new.env()
tt
tt[["tt"]] <- "helge"
tt
tt[["tt"]]
for(t in tree){
print(nrow(t))
}
for(t in tree){
print(ncol(t))
}
for(t in tree){
print(t)
}
for(t in tree){
for(s in t):
for(t in tree){
for(s in t){
print(s)
}
}
for(t in tree){
len(t)
}
for(t in tree){
for(i in seq(nrow(t)){
for(t in tree){
for(i in seq(nrow(t))){
print(i)
}
}
for(t in tree){
for(i in seq(length(t))){
print(i)
}
}
head(tree)
for(t in tree){
for(i in seq(length(t))){
print(paste(names(tree)[i], t[i])
}
for(t in tree){
for(i in seq(length(t))){
print(paste(names(tree)[i], t[i]))
}
}
for(t in tree){
for(i in seq(length(t))){
print(paste(i, names(tree)[i], t[i]))
}
}
for(t in tree){
print(t)
}
head(tree)
length(tree)
length(names(tree))
names(tree)
tree[1]
nrow(tree)
for(i in nrow(tree)){
print(tree[i, "Level.1"])
}
print(tree[1, "Level.1"])
print(tree[2, "Level.1"])
print(tree[3, "Level.1"])
print(tree[300, "Level.1"])
print(tree[800, "Level.1"])
for(i in nrow(tree)){
print(tree[i])
}
for(i in nrow(tree)){
print(tree[i,])
}
for(i in seq(nrow(tree))){
print(tree[i, "Level.1"])
}
for(i in seq(nrow(tree))){
print(tree[i, "Level.2"])
}
for(i in seq(nrow(tree))){
print(tree["Level.2", i])
}
tree[200]
tree[200,]
tree[200,"Level.5"]
tree[200,"Level.1"]
tree[200,"Level.2"]
tree[200,"Level.3"]
tree[200,"Level.4"]
seq(nrow(tree))
for(i in seq(nrow(tree))){
print(tree[i,])
}
for(i in seq(nrow(tree))){
print(tree[i,"Level.5"])
}
for(i in seq(nrow(tree))){
print(paste(i,tree[i,"Level.5"]))
}
for(i in seq(nrow(tree))){
print(paste(i,tree[i,"Level.1"]))
}
tr <- list()
tr <- c(tr,a=1)
tr
tr <- c(tr,b=2)
tr
tr <- c(tr,b=3)
tr
tr[["b"]] <- 4
tr
tr <- list()
tr[["b"]] <- 6578
tr
tr <- list()
for(i in seq(nrow(tree))){
}
tr[["ll"]]
tr[["ll"]] is NULL
tr[["ll"]] == NULL
is(tr[["ll"]] == NULL)
is(tr[["ll"]], NULL)
is.null
is.null(tr[["jj"]])
if(is.null(tr[["jj"]])){print("hello")}
if(is.null(tr[["b"]])){print("hello")}
tr
tr[["b"]] <- 8
if(is.null(tr[["b"]])){print("hello")}
if(is.null(tr[["b"]])){print("hello")}else{print("hello2")}
for(i in seq(nrow(tree))){
}
quit()
